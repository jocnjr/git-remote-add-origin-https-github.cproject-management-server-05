{"version":3,"sources":["components/auth/auth-service.js","components/auth/protected-route.js","components/forms/Input.js","components/forms/Textarea.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/tasks/TaskDetails.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","this","service","axios","create","baseURL","process","withCredentials","username","password","post","then","response","data","get","ProtectedRoute","Component","component","user","rest","console","log","render","props","loggedInUser","to","pathname","prevPath","location","Input","name","value","handleChange","className","type","placeholder","onChange","e","Textarea","AddProject","state","title","description","imageUrl","bind","handleFormSubmit","handleFileUpload","event","preventDefault","getData","setState","catch","error","target","files","uploadData","FormData","append","secure_url","err","onSubmit","src","alt","ProjectList","listOfProjects","getAllProjects","responseFromApi","style","width","float","map","project","key","_id","tasks","task","index","EditProject","theProject","handleChangeTitle","handleChangeDesc","put","getTheProject","AddTask","isShowing","toggleForm","showAddTaskForm","projectID","onClick","ProjectDetails","getSingleProject","deleteProject","params","match","id","owner","renderEditForm","renderAddTaskForm","delete","history","push","length","ownershipCheck","TaskDetails","getTheTask","taskId","theTask","Navbar","logoutUser","prevProps","userInSession","logout","getUser","textDecoration","Signup","signup","Login","login","App","getTheUser","loggedin","userObj","fetchUser","path","exact","React","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bac9bd88.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            withCredentials: true\n        });\n    }\n\n    signup(username, password) {\n        return this.service.post('/signup', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    loggedin() {\n        return this.service.get('/loggedin')\n            .then(response => response.data)\n    }\n\n    login(username, password) {\n        return this.service.post('/login', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    logout() {\n        return this.service.get('/logout')\n            .then(response => response.data)\n    }\n}\n\nexport default AuthService;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, user, ...rest }) => {\n  console.log({ component: Component, user, ...rest });\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user) {\n          return <Component {...props} loggedInUser={user} />;\n        } else {\n          return (\n            <Redirect\n              to={{ pathname: \"/\", prevPath: props.location.pathname }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\nexport default ProtectedRoute;\n","import React from \"react\";\n\nconst Input = ({ name, value, handleChange }) => (\n  <div className=\"field\">\n    <div className=\"control\">\n      <input\n        className=\"input is-small\"\n        type=\"text\"\n        placeholder={`enter ${name}`}\n        name={name}\n        value={value}\n        onChange={e => handleChange(e)}\n      />\n    </div>\n  </div>\n);\n\nexport default Input;\n","import React from \"react\";\n\nconst Textarea = ({ name, value, handleChange }) => (\n  <textarea\n    className=\"textarea\"\n    name={name}\n    placeholder={`enter ${name}`}\n    value={value}\n    onChange={e => handleChange(e)}\n  ></textarea>\n);\n\nexport default Textarea;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", description: \"\", imageUrl: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const { title, description, imageUrl } = this.state;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/projects`,\n        { title, description, imageUrl },\n        { withCredentials: true }\n      )\n      .then(response => {\n        this.props.getData();\n        console.log(response.data);\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleFileUpload(event) {\n    console.log(\"The file to be uploaded is: \", event.target.files[0]);\n\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"imageUrl\", event.target.files[0]);\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/upload`, uploadData, {\n        withCredentials: true\n      })\n      .then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ imageUrl: response.data.secure_url });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <Input\n            name=\"title\"\n            value={this.state.title}\n            handleChange={this.handleChange}\n          />\n\n          <Textarea\n            name=\"description\"\n            value={this.state.description}\n            handleChange={this.handleChange}\n          />\n\n          <input type=\"file\" onChange={this.handleFileUpload} />\n          {this.state.imageUrl && (\n            <img src={this.state.imageUrl} alt=\"my image\" />\n          )}\n          <br />\n          <input className=\"button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddProject;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport AddProject from \"./AddProject\"; // <== !!\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { listOfProjects: [] };\n    this.getAllProjects = this.getAllProjects.bind(this);\n  }\n\n  getAllProjects() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/projects`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        this.setState({\n          listOfProjects: responseFromApi.data\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getAllProjects();\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: \"60%\", float: \"left\" }}>\n          {this.state.listOfProjects.map(project => {\n            return (\n              <div key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h3>{project.title}</h3>\n                </Link>\n                {/* 🥁 added so the tasks can be displayed:  🥁 */}\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>task: {task.title}</li>;\n                  })}\n                </ul>\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n              </div>\n            );\n          })}\n        </div>\n        <div style={{ width: \"40%\", float: \"right\" }}>\n          <AddProject getData={this.getAllProjects} /> {/* <== !!! */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.theProject.title,\n      description: this.props.theProject.description\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n    this.handleChangeDesc = this.handleChangeDesc.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/projects/${this.props.theProject._id}`,\n        {\n          title,\n          description\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        // this.props.history.push('/projects');\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChangeTitle(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleChangeDesc(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h3>Edit form</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <Input\n            name=\"title\"\n            value={this.state.title}\n            handleChange={this.handleChangeTitle}\n          />\n\n          <Textarea\n            name=\"description\"\n            value={this.state.description}\n            handleChange={this.handleChangeDesc}\n          />\n\n          <input className=\"button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditProject;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props); //             will help us to toggle add task form\n    //                      |\n    this.state = { title: \"\", description: \"\", isShowing: false };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.showAddTaskForm = this.showAddTaskForm.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n    // it has to be the 'id' because we are referencing project\n    // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n\n    // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route,\n    // so the names have to match\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/tasks`,\n        {\n          title,\n          description,\n          projectID\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        // after submitting the form, retrieve project one more time so the new task is displayed as well\n        //              |\n        this.props.getTheProject();\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  toggleForm() {\n    this.setState({ isShowing: !this.state.isShowing });\n  }\n\n  showAddTaskForm() {\n    if (this.state.isShowing) {\n      return (\n        <div>\n          <h3>Add Task</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <Input\n              name=\"title\"\n              value={this.state.title}\n              handleChange={this.handleChange}\n            />\n\n            <Textarea\n              name=\"description\"\n              value={this.state.description}\n              handleChange={this.handleChange}\n            />\n\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <button onClick={this.toggleForm}> Add task </button>\n        {this.showAddTaskForm()}\n      </div>\n    );\n  }\n}\n\nexport default AddTask;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport EditProject from \"./EditProject\";\nimport AddTask from \"../tasks/AddTask\";\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getSingleProject = this.getSingleProject.bind(this);\n    this.deleteProject = this.deleteProject.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  getSingleProject() {\n    const { params } = this.props.match;\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/projects/${params.id}`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  ownershipCheck(project) {\n    if (\n      this.props.loggedInUser &&\n      project.owner == this.props.loggedInUser._id\n    ) {\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button className=\"button\" onClick={() => this.deleteProject()}>\n            Delete project\n          </button>\n          <div>{this.renderAddTaskForm()} </div>\n        </div>\n      );\n    }\n  }\n\n  renderEditForm() {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      return (\n        <EditProject\n          theProject={this.state}\n          getTheProject={this.getSingleProject}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  renderAddTaskForm() {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return (\n        <AddTask\n          theProject={this.state}\n          getTheProject={this.getSingleProject}\n        />\n      );\n    }\n  }\n\n  // DELETE PROJECT:\n  deleteProject() {\n    const { params } = this.props.match;\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/projects/${params.id}`)\n      .then(() => {\n        this.props.history.push(\"/projects\"); // !!!\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        <img src={this.state.imageUrl} alt=\"my image\" />\n        {/* show the task heading only if there are tasks */}\n        {this.state.tasks && this.state.tasks.length > 0 && (\n          <h3 className=\"title\">Tasks </h3>\n        )}\n        {/* map through the array of tasks and... */}\n        {this.state.tasks &&\n          this.state.tasks.map((task, index) => {\n            return (\n              <div key={index}>\n                {/* ... make each task's title a link that goes to the task details page */}\n                <Link to={`/projects/${this.state._id}/tasks/${task._id}`}>\n                  {task.title}\n                </Link>\n              </div>\n            );\n          })}\n        <br />\n        {this.ownershipCheck(this.state)}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default ProjectDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass TaskDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", description: \"\" };\n  }\n\n  componentDidMount() {\n    this.getTheTask();\n  }\n\n  getTheTask() {\n    const { params } = this.props.match;\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/projects/${params.id}/tasks/${params.taskId}`,\n        { withCredentials: true }\n      )\n      .then(responseFromApi => {\n        const theTask = responseFromApi.data;\n        this.setState(theTask);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n      </div>\n    );\n  }\n}\n\nexport default TaskDetails;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/auth-service\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.logoutUser = this.logoutUser.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userInSession !== prevProps.userInSession) {\n      this.setState({ loggedInUser: this.props.userInSession });\n    }\n  }\n\n  logoutUser() {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n      this.props.getUser(null);\n    });\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"navbar\">\n          <ul>\n            <li>Welcome, {this.state.loggedInUser.username}</li>\n            <li>\n              <Link to=\"/projects\" style={{ textDecoration: \"none\" }}>\n                Projects\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <button onClick={this.logoutUser}>Logout</button>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar\">\n            <ul>\n              <li>\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                  Login\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n                  Signup\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../forms/Input\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.service = new AuthService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        console.log(response);\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/projects\");\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label> Username: </label>\n          <Input\n            name=\"username\"\n            value={this.state.username}\n            handleChange={this.handleChange}\n          />\n          <label> Password: </label>\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={e => this.handleChange(e)}\n          />\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n\n        <p>\n          Already have account ?<Link to={\"/\"}> Login </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n        this.props.history.push(\n          this.props.location.prevPath\n            ? this.props.location.prevPath\n            : \"/projects\"\n        );\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>\n          Don't have account?\n          <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport AuthService from \"./components/auth/auth-service\";\nimport ProtectedRoute from \"./components/auth/protected-route\";\n\n// components\nimport ProjectList from \"./components/projects/ProjectList\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport TaskDetails from \"./components/tasks/TaskDetails\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n    this.getTheUser = this.getTheUser.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  getTheUser(userObj) {\n    this.setState({\n      loggedInUser: userObj\n    });\n  }\n\n  render() {\n    this.fetchUser();\n    if (this.state.loggedInUser) {\n      return (\n        <div className=\"App\">\n          <Navbar\n            userInSession={this.state.loggedInUser}\n            getUser={this.getTheUser}\n          />\n          <Switch>\n            <ProtectedRoute\n              user={this.state.loggedInUser}\n              path=\"/projects/:id\"\n              component={ProjectDetails}\n            />\n            <ProtectedRoute\n              user={this.state.loggedInUser}\n              path=\"/projects\"\n              component={ProjectList}\n            />\n          </Switch>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Navbar userInSession={this.state.loggedInUser} />\n          <Switch>\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => <Signup getUser={this.getTheUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={props => <Login getUser={this.getTheUser} {...props} />}\n            />\n            <ProtectedRoute\n              user={this.state.loggedInUser}\n              path=\"/projects/:id\"\n              component={ProjectDetails}\n            />\n            <ProtectedRoute\n              user={this.state.loggedInUser}\n              path=\"/projects\"\n              component={ProjectList}\n            />\n            <Route\n              exact\n              path=\"/projects/:id/tasks/:taskId\"\n              component={TaskDetails}\n            />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bulma/css/bulma.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}