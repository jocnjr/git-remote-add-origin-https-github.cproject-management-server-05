{"version":3,"sources":["components/auth/auth-service.js","context/UserContext.js","components/auth/protected-route.js","components/forms/Input.js","components/forms/Textarea.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/tasks/TaskDetails.js","components/navbar/PublicMenuRender.js","components/navbar/LoggedInMenuRender.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","components/Route404.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","this","service","axios","create","baseURL","process","withCredentials","username","password","post","then","response","data","get","UserContext","React","createContext","ProtectedRoute","Component","component","rest","console","log","Consumer","user","render","props","loggedInUser","to","pathname","prevPath","location","Input","name","type","value","handleChange","className","placeholder","onChange","e","Textarea","AddProject","getData","useState","title","handleTitle","description","handleDescription","imageUrl","handleImageUrl","handleFormSubmit","event","a","preventDefault","error","handleFileUpload","target","files","uploadData","FormData","append","secure_url","onSubmit","src","alt","ProjectList","listOfProjects","updateProjects","useEffect","getAllProjects","style","width","float","map","project","key","_id","tasks","task","index","EditProject","theProject","getTheProject","put","catch","AddTask","isShowing","handleIsShowing","projectID","onClick","showAddTaskForm","ProjectDetails","history","handleProject","getSingleProject","params","match","id","responseFromApi","err","renderEditForm","renderAddTaskForm","deleteProject","delete","push","context","length","owner","ownershipCheck","TaskDetails","getTheTask","taskId","PublicMenuRender","LoggedInMenuRender","logoutUser","role","aria-label","Navbar","getUser","logout","Signup","handleUsername","handlePassword","message","handleMessage","signup","htmlFor","Login","login","Home","Route404","App","setUser","fetchUser","loggedin","getTheUser","userObj","Provider","exact","path","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0017850.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            withCredentials: true\n        });\n    }\n\n    signup(username, password) {\n        return this.service.post('/signup', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    loggedin() {\n        return this.service.get('/loggedin')\n            .then(response => response.data)\n    }\n\n    login(username, password) {\n        return this.service.post('/login', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    logout() {\n        return this.service.get('/logout')\n            .then(response => response.data)\n    }\n}\n\nexport default AuthService;","import React from 'react';\nconst UserContext = React.createContext(null);\nexport default UserContext;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  console.log({ component: Component, ...rest });\n  return (\n    <UserContext.Consumer>\n      {user => (\n        <Route\n          {...rest}\n          render={props => {\n            if (user) {\n              return <Component {...props} loggedInUser={user} />;\n            } else {\n              return (\n                <Redirect\n                  to={{ pathname: \"/\", prevPath: props.location.pathname }}\n                />\n              );\n            }\n          }}\n        />\n      )}\n    </UserContext.Consumer>\n  );\n};\nexport default ProtectedRoute;\n","import React from \"react\";\n\nconst Input = ({ name, type, value, handleChange }) => (\n  <div className=\"field\">\n    <div className=\"control\">\n      <input\n        className=\"input is-small\"\n        type={type}\n        placeholder={`enter ${name}`}\n        name={name}\n        value={value}\n        onChange={e => handleChange(e)}\n      />\n    </div>\n  </div>\n);\n\nexport default Input;\n","import React from \"react\";\n\nconst Textarea = ({ name, value, handleChange }) => (\n  <textarea\n    className=\"textarea\"\n    name={name}\n    placeholder={`enter ${name}`}\n    value={value}\n    onChange={e => handleChange(e)}\n  ></textarea>\n);\n\nexport default Textarea;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nconst AddProject = ({ getData }) => {\n  const [title, handleTitle] = useState(\"\");\n  const [description, handleDescription] = useState(\"\");\n  const [imageUrl, handleImageUrl] = useState(\"\");\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await axios.post(\n        `${process.env.REACT_APP_API_URL}/projects`,\n        { title, description, imageUrl },\n        { withCredentials: true }\n      );\n      getData();\n      handleTitle(\"\");\n      handleDescription(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFileUpload = async event => {\n    console.log(\"The file to be uploaded is: \", event.target.files[0]);\n\n    // FormData is a webAPI feature\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", event.target.files[0]);\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/upload`,\n        uploadData,\n        {\n          withCredentials: true\n        }\n      );\n\n      handleImageUrl(response.data.secure_url);\n    } catch (error) {\n      console.error(\"Error while uploading the file: \", error);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <form onSubmit={handleFormSubmit}>\n        <Input\n          name=\"title\"\n          value={title}\n          handleChange={e => handleTitle(e.target.value)}\n        />\n\n        <Textarea\n          name=\"description\"\n          value={description}\n          handleChange={e => handleDescription(e.target.value)}\n        />\n        <br />\n        <div className=\"file is-small\">\n          <label className=\"file-label\">\n            <input\n              className=\"file-input\"\n              type=\"file\"\n              onChange={handleFileUpload}\n            />\n            <span className=\"file-cta\">\n              <span className=\"file-icon\">\n                <i className=\"fas fa-upload\"></i>\n              </span>\n              <span className=\"file-label\">Choose a file…</span>\n            </span>\n          </label>\n        </div>\n        {imageUrl && <img src={imageUrl} alt=\"{title}\" />}\n        <br />\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddProject;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport AddProject from \"./AddProject\";\n\nconst ProjectList = () => {\n  const [listOfProjects, updateProjects] = useState(null);\n\n  useEffect(() => {\n    if (!listOfProjects) getAllProjects();\n  });\n\n  const getAllProjects = async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/projects`,\n        {\n          withCredentials: true\n        }\n      );\n      updateProjects(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ width: \"60%\", float: \"left\" }}>\n        {listOfProjects &&\n          listOfProjects.map(project => {\n            return (\n              <div key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h1 className=\"title is-2\">{project.title}</h1>\n                </Link>\n                {/* 🥁 added so the tasks can be displayed:  🥁 */}\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>task: {task.title}</li>;\n                  })}\n                </ul>\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n              </div>\n            );\n          })}\n      </div>\n      <div style={{ width: \"40%\", float: \"right\" }}>\n        <AddProject getData={getAllProjects} /> {/* <== !!! */}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nconst EditProject = ({ theProject, getTheProject }) => {\n  const [title, handleTitle] = useState(theProject.title);\n  const [description, handleDescription] = useState(theProject.description);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/projects/${theProject._id}`,\n        {\n          title,\n          description\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        getTheProject();\n        // after submitting the form, redirect to '/projects'\n        // history.push(\"/projects\");\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <div>\n      <hr />\n      <h3>Edit form</h3>\n      <form onSubmit={handleFormSubmit}>\n        <Input\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          handleChange={e => handleTitle(e.target.value)}\n        />\n        <Textarea\n          name=\"description\"\n          value={description}\n          handleChange={e => handleDescription(e.target.value)}\n        />\n\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default EditProject;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../forms/Input\";\nimport Textarea from \"../forms/Textarea\";\n\nconst AddTask = ({ theProject, getTheProject }) => {\n  const [title, handleTitle] = useState(\"\");\n  const [description, handleDescription] = useState(\"\");\n  const [isShowing, handleIsShowing] = useState(false);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const projectID = theProject._id;\n\n    try {\n      await axios.post(\n        `${process.env.REACT_APP_API_URL}/tasks`,\n        {\n          title,\n          description,\n          projectID\n        },\n        { withCredentials: true }\n      );\n      getTheProject();\n      handleTitle(\"\");\n      handleDescription(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const toggleForm = () => {\n    handleIsShowing(!isShowing);\n  };\n\n  const showAddTaskForm = () => {\n    if (isShowing) {\n      return (\n        <div>\n          <h3>Add Task</h3>\n          <form onSubmit={handleFormSubmit}>\n            <Input\n              name=\"title\"\n              value={title}\n              handleChange={e => handleTitle(e.target.value)}\n            />\n\n            <Textarea\n              name=\"description\"\n              value={description}\n              handleChange={e => handleDescription(e.target.value)}\n            />\n\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      );\n    }\n  };\n  return (\n    <div>\n      <hr />\n      <button onClick={toggleForm}> Add task </button>\n      {showAddTaskForm()}\n    </div>\n  );\n};\n\nexport default AddTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport EditProject from \"./EditProject\";\nimport AddTask from \"../tasks/AddTask\";\nimport UserContext from \"../../context/UserContext\";\n\nconst ProjectDetails = ({ loggedInUser, history, ...props }) => {\n  const [project, handleProject] = useState(\"\");\n\n  useEffect(() => {\n    if (!project) getSingleProject();\n  });\n\n  const getSingleProject = () => {\n    const { params } = props.match;\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/projects/${params.id}`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        console.log(theProject, project);\n        handleProject(theProject);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  const ownershipCheck = project => {\n    if (loggedInUser && project.owner === loggedInUser._id) {\n      return (\n        <div>\n          <div>{renderEditForm()} </div>\n          <button className=\"button\" onClick={() => deleteProject()}>\n            Delete project\n          </button>\n          <div>{renderAddTaskForm()} </div>\n        </div>\n      );\n    }\n  };\n\n  const renderEditForm = () => {\n    if (!project.title) {\n      getSingleProject();\n    } else {\n      return (\n        <EditProject\n          theProject={project}\n          getTheProject={getSingleProject}\n          {...props}\n        />\n      );\n    }\n  };\n\n  const renderAddTaskForm = () => {\n    if (!project.title) {\n      getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return <AddTask theProject={project} getTheProject={getSingleProject} />;\n    }\n  };\n\n  // DELETE PROJECT:\n  const deleteProject = () => {\n    const { params } = props.match;\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/projects/${params.id}`)\n      .then(() => {\n        history.push(\"/projects\"); // !!!\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{project.title}</h1>\n      <p>{project.description}</p>\n      {project.imageUrl && <img src={project.imageUrl} alt={project.title} />}\n      <UserContext.Consumer>\n        {context => (\n          <p className=\"title is-6\">\n            loggedInUser by context: {context.username}\n          </p>\n        )}\n      </UserContext.Consumer>\n      {/* show the task heading only if there are tasks */}\n      {project.tasks && project.tasks.length > 0 && (\n        <h3 className=\"subtitle is-5\">Tasks </h3>\n      )}\n      {/* map through the array of tasks and... */}\n      {project.tasks &&\n        project.tasks.map((task, index) => {\n          return (\n            <div key={index}>\n              {/* ... make each task's title a link that goes to the task details page */}\n              <Link to={`/projects/${project._id}/tasks/${task._id}`}>\n                {task.title}\n              </Link>\n            </div>\n          );\n        })}\n      <br />\n      {ownershipCheck(project)}\n      <br />\n    </div>\n  );\n};\n\nexport default ProjectDetails;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst TaskDetails = ({ match }) => {\n  const [title, handleTitle] = useState(\"\");\n  const [description, handleDescription] = useState(\"\");\n\n  useEffect(() => {\n    if (!title) getTheTask();\n  });\n\n  const getTheTask = async () => {\n    const { params } = match;\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/projects/${params.id}/tasks/${params.taskId}`,\n        { withCredentials: true }\n      );\n      handleTitle(response.data.title);\n      handleDescription(response.data.description);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default TaskDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport const PublicMenuRender = () => {\n  return (\n    <div>\n      <nav className=\"navbar\">\n        <ul>\n          <li>\n            <Link to=\"/\">Login</Link>\n          </li>\n          <li>\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const LoggedInMenuRender = ({ username, logoutUser }) => {\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <Link to=\"/projects\" className=\"navbar-item\">\n            Projects\n          </Link>\n        </div>\n      </div>\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">Welcome, {username}</div>\n        <div className=\"navbar-item\">\n          <button className=\"button is-small\" onClick={logoutUser}>\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport AuthService from \"../auth/auth-service\";\nimport UserContext from \"../../context/UserContext\";\nimport { PublicMenuRender } from \"./PublicMenuRender\";\nimport { LoggedInMenuRender } from \"./LoggedInMenuRender\";\n\nconst Navbar = ({ getUser }) => {\n  const logoutUser = async () => {\n    const service = new AuthService();\n\n    try {\n      await service.logout();\n      getUser(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <UserContext.Consumer>\n      {user =>\n        user ? (\n          <LoggedInMenuRender\n            username={user.username}\n            logoutUser={logoutUser}\n          />\n        ) : (\n          <PublicMenuRender />\n        )\n      }\n    </UserContext.Consumer>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../forms/Input\";\n\nconst Signup = ({ getUser, history }) => {\n  const [username, handleUsername] = useState(\"\");\n  const [password, handlePassword] = useState(\"\");\n  const [message, handleMessage] = useState(\"\");\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const service = new AuthService();\n\n    try {\n      const response = await service.signup(username, password);\n      handleUsername(\"\");\n      handlePassword(\"\");\n      getUser(response);\n      history.push(\"/projects\");\n    } catch (error) {\n      handleMessage(error.message);\n    }\n  };\n  return (\n    <div className=\"section\">\n      <div className=\"container\" style={{ width: \"50vw\" }}>\n        <form onSubmit={handleFormSubmit}>\n          <label htmlFor=\"username\"> Username: </label>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            handleChange={e => handleUsername(e.target.value)}\n          />\n          <label htmlFor=\"password\"> Password: </label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={e => handlePassword(e.target.value)}\n          />\n          <button className=\"button\" type=\"submit\">\n            Signup\n          </button>\n        </form>\n        <br />\n        {message && <p className=\"notification is-danger\">{message}</p>}\n        <p>\n          Already have account ?<Link to={\"/\"}> Login </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../forms/Input\";\n\nconst Login = ({ getUser, location, history }) => {\n  const [username, handleUsername] = useState(\"\");\n  const [password, handlePassword] = useState(\"\");\n\n  const handleFormSubmit = async event => {\n    const service = new AuthService();\n    event.preventDefault();\n\n    try {\n      const response = await service.login(username, password);\n      handleUsername(\"\");\n      handlePassword(\"\");\n      getUser(response);\n      history.push(location.prevPath ? location.prevPath : \"/projects\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\" style={{ width: \"50vw\" }}>\n        <form onSubmit={handleFormSubmit}>\n          <label htmlFor=\"username\">Username:</label>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            handleChange={e => handleUsername(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={e => handlePassword(e.target.value)}\n          />\n\n          <button className=\"button\">Login</button>\n        </form>\n        <p>\n          Don't have account?\n          <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport UserContext from \"../context/UserContext\";\n\nconst Home = () => {\n  return (\n    <UserContext.Consumer>\n      {user => <h1 className=\"title is-2\">welcome, {user.username}</h1>}\n    </UserContext.Consumer>\n  );\n};\nexport default Home;\n","import React from \"react\";\n\nconst Route404 = () => {\n  return <h1 className=\"title is-1\">no dounut for you!</h1>;\n};\n\nexport default Route404;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport AuthService from \"./components/auth/auth-service\";\nimport ProtectedRoute from \"./components/auth/protected-route\";\n\n// components\nimport ProjectList from \"./components/projects/ProjectList\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport TaskDetails from \"./components/tasks/TaskDetails\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport UserContext from \"./context/UserContext\";\nimport Home from \"./components/Home\";\nimport Route404 from \"./components/Route404\";\n\nconst App = () => {\n  const [loggedInUser, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!loggedInUser) fetchUser();\n  });\n\n  const fetchUser = async () => {\n    const service = new AuthService();\n    if (loggedInUser === null) {\n      try {\n        const response = await service.loggedin();\n        setUser(response);\n      } catch (error) {\n        setUser(null);\n      }\n    }\n  };\n\n  const getTheUser = userObj => {\n    setUser(userObj);\n  };\n\n  return (\n    <UserContext.Provider value={loggedInUser}>\n      <div className=\"section is-hd\">\n        <Navbar getUser={getTheUser} />\n        <div className=\"container\">\n          <Switch>\n            {loggedInUser ? (\n              <>\n                <ProtectedRoute\n                  exact\n                  path=\"/projects\"\n                  component={ProjectList}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects/:id/tasks/:taskId\"\n                  component={TaskDetails}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects/:id\"\n                  component={ProjectDetails}\n                />\n                <ProtectedRoute exact path=\"/\" component={Home} />\n              </>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={props => <Signup getUser={getTheUser} {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => <Login getUser={getTheUser} {...props} />}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects/:id\"\n                  component={ProjectDetails}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects\"\n                  component={ProjectList}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects/:id/tasks/:taskId\"\n                  component={TaskDetails}\n                />\n              </>\n            )}\n            <Route component={Route404} />\n          </Switch>\n        </div>\n      </div>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bulma/css/bulma.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}